mutation createUsers{
  user1: createUser(
    cpf: "82246539005",
		email: "test1@test.com",
    name: "Victor de Sá",
		rg: "3895229406",
    signature: "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
  ){
		id
    party
  },
	user2: createUser(
    cpf: "42309164003",
		email: "test2@test.com",
    name: "Lana Moura Dantas",
		rg: "61651968498",
    signature: "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
  ){
		id
    party
  },
  user3: createUser(
    cpf: "41330958047",
		email: "test3@test.com",
    name: "Albert Scholl",
		rg: "16516515616",
    signature: "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
  ){
		id
    party
  },
}

mutation createCompanies {
  company1: createCompany(
    name: "Disneylândia"
    cnpj: "78589118000194"
    segments: ["entertainment"]
    documents: [
      "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
    ]
  ) {
    id
    party
  }
  company2: createCompany(
    name: "Australian Migration"
    cnpj: "28594513000197"
    segments: ["travel", "tourism"]
    documents: [
      "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
    ]
  ) {
    id
    party
  }
  company3: createCompany(
    name: "Purple Lights"
    cnpj: "78005752000132"
    segments: ["tourism", "housing", "renovation"]
    documents: [
      "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
    ]
  ) {
    id
    party
  }
}

mutation addRepresentations(
  $user1ID: ID!
  $company1ID: ID!
  $user2ID: ID!
  $company2ID: ID!
) {
  representation1: addRepresentation(userId: $user1ID, companyId: $company1ID) {
    id
    party
  }
  representation2: addRepresentation(userId: $user1ID, companyId: $company2ID) {
    id
    party
  }
  representation3: addRepresentation(userId: $user2ID, companyId: $company2ID) {
    id
    party
  }
}

mutation createContracts(
  $user1Party: ID!
  $user2Party: ID!
  $user3Party: ID!
  $company1Party: ID!
  $company2Party: ID!
  $company3Party: ID!
) {
  contract1: createContract(
    mainParty: $user1Party
    secondaryParty: $user3Party
    startDate: "1410739200000"
    endDate: "1461542400000"
    clauses: [
      {
        delayTolerance: 12
        numberNotifications: 1
        rescissory: true
        text: "Clause 1 description"
        payment: {
          baseCharge: 1200.00
          kind: "monthly"
          paymentDeadline: 15
          increments: [{ period: 730, relativeRate: 0.12 }]
        }
      }
    ]
  ) {
    _id
    mainParty
    secondaryParty
    appliedClauses {
      clauseID
    }
  }
  contract2: createContract(
    mainParty: $user2Party
    secondaryParty: $company2Party
    startDate: "1410739200000"
    endDate: "1461542400000"
    clauses: [
      {
        delayTolerance: 0
        numberNotifications: 1
        rescissory: true
        text: "Sed sit amet dui augue. Quisque imperdiet sit amet purus in aliquam. Proin et enim at eros sagittis venenatis quis non purus. Vivamus convallis purus id finibus tincidunt. Vivamus imperdiet."
        payment: {
          baseCharge: 100.00
          kind: "yearly"
          paymentDeadline: 5
          increments: [{ period: 120, absoluteRate: 10.00 }]
        }
      }
    ]
  ) {
    _id
    mainParty
    secondaryParty
    appliedClauses {
      clauseID
    }
  }
  contract3: createContract(
    mainParty: $company2Party
    secondaryParty: $company1Party
    startDate: "1410739200000"
    endDate: "1461542400000"
    clauses: [
      {
        delayTolerance: 1
        numberNotifications: 2
        rescissory: true
        text: "Nam vitae fermentum sapien. Sed viverra eros in libero hendrerit, et hendrerit tellus efficitur. Maecenas eros quam, maximus eu ipsum suscipit, feugiat tincidunt velit. Maecenas suscipit fringilla volutpat. Aliquam posuere."
        payment: {
          baseCharge: 10.00
          kind: "monthly"
          paymentDeadline: 1
          increments: [{ period: 30, absoluteRate: 2.00 }]
        }
      }
    ]
  ) {
    _id
    mainParty
    secondaryParty
    appliedClauses {
      clauseID
    }
  }
  contract4: createContract(
    mainParty: $company1Party
    secondaryParty: $company3Party
    startDate: "1410739200000"
    endDate: "1461542400000"
    clauses: [
      {
        delayTolerance: 0
        numberNotifications: 0
        rescissory: true
        text: "Suspendisse ultricies sem urna. Nunc in turpis sed metus porta sodales in in purus. Suspendisse egestas, purus placerat euismod maximus, metus enim malesuada magna, sit amet congue ligula risus in."
        payment: { baseCharge: 10000.00, kind: "single", paymentDeadline: 2 }
      }
    ]
  ) {
    _id
    mainParty
    secondaryParty
    appliedClauses {
      clauseID
    }
  }
  contract5: createContract(
    mainParty: $user2Party
    secondaryParty: $user1Party
    startDate: "1410739200000"
    endDate: "1461542400000"
    clauses: [
      {
        delayTolerance: 10
        numberNotifications: 1
        rescissory: true
        text: "Proin varius rhoncus consectetur. Nam id ipsum a metus efficitur vestibulum. Donec vehicula sem nibh, a mollis neque sodales in. Vestibulum elementum vel turpis eget ornare. Aliquam maximus turpis eu."
        payment: {
          baseCharge: 2351.91
          kind: "monthly"
          paymentDeadline: 10
          increments: [
            { period: 365, relativeRate: 0.032 }
            { period: 730, absoluteRate: 400.00 }
          ]
        }
      }
    ]
  ) {
    _id
    mainParty
    secondaryParty
    appliedClauses {
      clauseID
    }
  }
  contract6: createContract(
    mainParty: $company3Party
    secondaryParty: $user3Party
    startDate: "1410739200000"
    endDate: "1461542400000"
    clauses: [
      {
        delayTolerance: 0
        numberNotifications: 0
        rescissory: true
        text: "Clause 1 description"
        payment: { baseCharge: 100.00, kind: "single", paymentDeadline: 10 }
      }
      {
        delayTolerance: 0
        numberNotifications: 0
        rescissory: true
        text: "Aliquam ut consectetur tellus. Nunc sed nisi in lectus elementum lacinia sit amet vitae magna. Pellentesque efficitur est eu justo euismod tempus ut quis mauris. Duis tincidunt justo velit, sit."
        payment: {
          baseCharge: 32.90
          kind: "monthly"
          paymentDeadline: 10
          increments: [{ period: 365, absoluteRate: 7.20 }]
        }
      }
      {
        delayTolerance: 0
        numberNotifications: 0
        rescissory: true
        text: "Sed mollis ante neque, sit amet molestie ex vehicula eget. Vivamus cursus, nisi a ornare ultrices, nisi orci tincidunt neque, at ornare lorem felis in velit. Quisque a magna vitae."
        payment: {
          baseCharge: 1.00
          kind: "monthly"
          paymentDeadline: 10
          increments: [
            { period: 30, relativeRate: 0.02 }
            { period: 365, absoluteRate: 4.00 }
            { period: 1095, relativeRate: 0.5 }
          ]
        }
      }
    ]
  ) {
    _id
    mainParty
    secondaryParty
    appliedClauses {
      clauseID
    }
  }
}

query recommendationQueries {
  recommendation1: getRelatedCompaniesBySegment(
    name: "Lana Moura Dantas"
    segment: "entertainment"
  ) {
    name
  }
  recommendation2: getClosestCompanyPathBySegment(
    name: "Lana Moura Dantas"
    segment: "entertainment"
  )
  recommendation3: getRelatedCompanyBySegmentWithMoreContracts(
    name: "Lana Moura Dantas"
    segment: "entertainment"
  ) {
    name
  }
  recommendation4: getBestRatedCompanyBySegment(
    name: "Lana Moura Dantas"
    segment: "entertainment"
  ) {
    name
  }
  recommendation5: getRelatedCompanies(name: "Lana Moura Dantas") {
    name
    segments
  }
}

query genericQueries($user1ID: ID!, $company1ID: ID!, $contract1ID: ID!) {
  getUser: getUser(userID: $user1ID) {
    name
  }
  getCompany: getCompany(companyID: $company1ID) {
    name
  }
  getContract: getContract(contractID: $contract1ID) {
    _id
    mainParty
    secondaryParty
    startDate
    endDate
  }
}

mutation changeSignature($user1ID: ID!) {
  addSignature(
    userID: $user1ID
    signature: "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFklEQVR42mNk+P//PwMRgHFUIX0VAgAE3B3t0SaZ0AAAAABJRU5ErkJggg=="
  ) {
    name
    signature
  }
}

mutation addExtensions($contract1ID: ID!) {
  extension1: addExtension(
    contractID: $contract1ID
    date: "1461542400000"
    newEndDate: "1595025493000"
  ) {
    _id
    mainParty
    extensions {
      newEndDate
    }
  }
}

mutation addClauses($contract1ID: ID!) {
  clause1: addClause(
    clause: {
      delayTolerance: 0
      numberNotifications: 0
      rescissory: true
      text: "Clause 1 description"
      payment: { baseCharge: 100.00, kind: "single", paymentDeadline: 10 }
    }
    contractID: $contract1ID
    startDate: "1595025493000"
  ) {
    _id
    appliedClauses {
      _id
      clauseID
    }
  }
}

mutation terminateContracts($company3Party: ID!, $contract4ID: ID!) {
  terminate1: terminateContract(
    partyID: $company3Party
    contractID: $contract4ID
  ) {
    _id
    mainParty
    secondaryParty
    terminatedBy
    terminatedDate
  }
}

mutation addNotifications($appliedClause1ID: ID!) {
  notification: addNotification(appliedClauseID: $appliedClause1ID) {
    _id
    appliedClauses {
      notifications {
        date
      }
    }
  }
}

mutation addReferences($clause1ID: ID!, $clause2ID: ID!) {
  reference1: addReference(
    clauseID: $clause2ID
    referencedClauseID: $clause1ID
  ) {
    _id
    references
  }
}

mutation newBill($appliedClause1ID:ID!){
  bill1: createBill(appliedClauseID: $appliedClause1ID){
    _id
    value
    chargeDate
    paymentDate
  }
}

mutation payBills($bill1ID:ID!){
  bill1: payBill(billID: $bill1ID) {
    _id
    value
    paymentDate
  }
}
