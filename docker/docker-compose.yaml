version: "3.4"

services:
  postgres:
    image: "postgres:12.3-alpine"
    volumes:
      - "relational-data:/var/lib/postgresql/data"
      - "../db_scripts/postgres:/usr/src/scripts"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=yager
      - POSTGRES_PASSWORD=yager
      - POSTGRES_DB=yager
  mongodb:
    image: "bitnami/mongodb:4.2.7"
    ports:
      - "27017:27017"
    volumes:
      - "docs-data:/bitnami/mongodb"
      - "../db_scripts/mongodb:/usr/src/scripts"
    environment:
      - MONGODB_DATABASE=yager
  neo4j:
    image: "neo4j:4.0.4"
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - "graph-data:/var/lib/neo4j"
      - "../db_scripts/neo4j:/usr/src/scripts"
    environment:
      - NEO4J_dbms_default__database=yager
      - NEO4J_USERNAME=yager
      - NEO4J_PASSWORD=yager
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "api_deps:/api/node_modules/"
      - "../api:/api"
    environment:
      - MONGO_URL=mongodb://mongodb:27017/yager
      - POSTGRES_URL=postgres://yager:yager@postgres:5432/yager
      - NEO4J_URL=neo4j://neo4j
      - API_PORT=3000


volumes:
  relational-data:
  docs-data:
  graph-data:
  api_deps: