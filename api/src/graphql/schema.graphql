type User {
  _id: ID!
  email: String!
  name: String!
}

type AppliedPayment {
  _id: String!
  baseValue: Float!
  type: String!
  dueDate: String!
}

type Company {
  _id: ID!
  name: String!
  cnpj: String!
  segments: [ID!]!
  documents: [ID!]!
}

type Query {
  getPayment(id: ID!): User!
}

type Mutation {
  createUser(email: String!, name: String!): User!
  createPayment(baseValue: Float!, type: String!, dueDate: String!): AppliedPayment!
  createCompany(name: String!, cnpj: String!, segments: [ID!]! , documents: [ID!]!): Company!
}